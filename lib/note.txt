


final supabase = Supabase.instance.client;
final user_id = supabase.auth.currentUser?.id ?? -1;

  fetchFriend(String referralCode)
  insertNewFriend(String insertFriend)
  insertNewPet(String friendId, String petId)
  fetchMultipleFriends()
  fetchMultiplePets(String friendId)

  fetchPets()
  addPet(Pet pet)
  addUser(UserDetails user)
  updatePet(Pet pet)
  deletePet(int id)
  deletePetFromFriends(int petId)
  fetchSnacks(int? petId)
  addFood(Food food)
  deleteFood(int? snackId)
  deleteMultipleFoods(List<int> snackIds)
  addFoodLog(FoodLog snack)
  fetchFoodLogs(int? petId)
  addRequest(Pet pet)
  logMood(List<MoodCardModel> moodCollection, String? observationNote, int? petId)
  fetchMoodLogs(int? petId)
  deleteRequestAfterPet(petId)
  addActivity(Activity activity)
  fetchActivities(int? petId)
  logActivity(List<ActivityCardModel> activityCollection, String? observationNote, int? petId)
  deleteMultipleActivity(List<int> activityIds)
  fetchActivityLogs(int? petId)

  fetchFriend(String referralCode)
  _fetchReminders(BuildContext context)
  fetchRequests(String state)
  addRequest(Request request)
  fetchPetDetails(int petId)
  deleteMultipleRequests(List<int> requestIds)
  fetchOtherRequests(String state)
  fetchOtherAcceptedRequests()
  fetchOwnerDetails(String? ownerId)
  acceptRequest(Request request, String caretakerId)
  fetchEarnings(String position, TimeFilter filter)
